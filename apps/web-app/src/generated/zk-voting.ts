// Generated by @wagmi/cli@0.1.15 on 4/26/2023 at 7:53:38 PM
import {
  useNetwork,
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
} from 'wagmi'
import { ReadContractResult } from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ZKVoting
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x611F0278dE9D2Bd4E38F15001B6410B4A915275f)
 * -
 * -
 */
export const zkVotingABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'zkPoHAddress', internalType: 'address', type: 'address' },
      { name: '_messageId', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'message',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'messageId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'zKProofOfHumanity',
    outputs: [
      { name: '', internalType: 'contract ZKProofOfHumanity', type: 'address' },
    ],
  },
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x611F0278dE9D2Bd4E38F15001B6410B4A915275f)
 * -
 * -
 */
export const zkVotingAddress = {
  5: '0x611F0278dE9D2Bd4E38F15001B6410B4A915275f',
  1337: '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6',
  31337: '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x611F0278dE9D2Bd4E38F15001B6410B4A915275f)
 * -
 * -
 */
export const zkVotingConfig = {
  address: zkVotingAddress,
  abi: zkVotingABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link zkVotingABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x611F0278dE9D2Bd4E38F15001B6410B4A915275f)
 * -
 * -
 */
export function useZkVoting(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof zkVotingAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContract({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zkVotingABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x611F0278dE9D2Bd4E38F15001B6410B4A915275f)
 * -
 * -
 */
export function useZkVotingRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof zkVotingABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zkVotingABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zkVotingAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    ...config,
  } as UseContractReadConfig<typeof zkVotingABI, TFunctionName, TSelectData>)
}
